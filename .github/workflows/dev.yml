name: 'Terraform'

on:
  push:
    branches:
    - wait
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    environment: dotpay-dev
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
     # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      #with:
       # cli_config_credentials_token: ${{ secrets.API_TOKEN }}
        
        
     
    - name: Terraform Init
      run: terraform init
      env:
        #GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
        #TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Plan
      run: terraform plan -lock=false
      env:
        #GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
        #TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve  -lock=false
      env:
        #GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
        #TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       
    #- name: Terraform Destroy
    #  run: terraform destroy -auto-approve -lock=false
    #  env:
        #GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
        ##TF_ACTION_WORKING_DIR: 'terraform'
    #    AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
